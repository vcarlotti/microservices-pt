/*
 * API TroubleTicket
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Note;
import io.swagger.client.model.RelatedObject;
import io.swagger.client.model.RelatedParty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.LocalDate;

/**
 * TroubleTicket
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-29T18:35:10.093-02:00")
public class TroubleTicket {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("correlationId")
  private String correlationId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("severity")
  private String severity = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("creationDate")
  private LocalDate creationDate = null;

  @JsonProperty("targetResolutionDate")
  private LocalDate targetResolutionDate = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUBMITTED("Submitted"),
    
    REJECTED("Rejected"),
    
    ACKNOWLEDGED("Acknowledged"),
    
    INPROGRESS("InProgress"),
    
    INPROGRESSHELD("InProgressHeld"),
    
    INPROGRESSPENDING("InProgressPending"),
    
    RESOLVED("Resolved"),
    
    CLOSED("Closed"),
    
    CANCELLED("Cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("statusChangeReason")
  private String statusChangeReason = null;

  @JsonProperty("statusChangeDate")
  private LocalDate statusChangeDate = null;

  @JsonProperty("relatedParty")
  private List<RelatedParty> relatedParty = null;

  @JsonProperty("relatedObject")
  private List<RelatedObject> relatedObject = null;

  @JsonProperty("note")
  private List<Note> note = null;

  public TroubleTicket id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TroubleTicket correlationId(String correlationId) {
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Get correlationId
   * @return correlationId
  **/
  @ApiModelProperty(value = "")
  public String getCorrelationId() {
    return correlationId;
  }

  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }

  public TroubleTicket description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TroubleTicket severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @ApiModelProperty(value = "")
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }

  public TroubleTicket type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TroubleTicket creationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
  }

  public TroubleTicket targetResolutionDate(LocalDate targetResolutionDate) {
    this.targetResolutionDate = targetResolutionDate;
    return this;
  }

   /**
   * Get targetResolutionDate
   * @return targetResolutionDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getTargetResolutionDate() {
    return targetResolutionDate;
  }

  public void setTargetResolutionDate(LocalDate targetResolutionDate) {
    this.targetResolutionDate = targetResolutionDate;
  }

  public TroubleTicket status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public TroubleTicket statusChangeReason(String statusChangeReason) {
    this.statusChangeReason = statusChangeReason;
    return this;
  }

   /**
   * Get statusChangeReason
   * @return statusChangeReason
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStatusChangeReason() {
    return statusChangeReason;
  }

  public void setStatusChangeReason(String statusChangeReason) {
    this.statusChangeReason = statusChangeReason;
  }

  public TroubleTicket statusChangeDate(LocalDate statusChangeDate) {
    this.statusChangeDate = statusChangeDate;
    return this;
  }

   /**
   * Get statusChangeDate
   * @return statusChangeDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getStatusChangeDate() {
    return statusChangeDate;
  }

  public void setStatusChangeDate(LocalDate statusChangeDate) {
    this.statusChangeDate = statusChangeDate;
  }

  public TroubleTicket relatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public TroubleTicket addRelatedPartyItem(RelatedParty relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<RelatedParty>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

   /**
   * Get relatedParty
   * @return relatedParty
  **/
  @ApiModelProperty(value = "")
  public List<RelatedParty> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public TroubleTicket relatedObject(List<RelatedObject> relatedObject) {
    this.relatedObject = relatedObject;
    return this;
  }

  public TroubleTicket addRelatedObjectItem(RelatedObject relatedObjectItem) {
    if (this.relatedObject == null) {
      this.relatedObject = new ArrayList<RelatedObject>();
    }
    this.relatedObject.add(relatedObjectItem);
    return this;
  }

   /**
   * Get relatedObject
   * @return relatedObject
  **/
  @ApiModelProperty(value = "")
  public List<RelatedObject> getRelatedObject() {
    return relatedObject;
  }

  public void setRelatedObject(List<RelatedObject> relatedObject) {
    this.relatedObject = relatedObject;
  }

  public TroubleTicket note(List<Note> note) {
    this.note = note;
    return this;
  }

  public TroubleTicket addNoteItem(Note noteItem) {
    if (this.note == null) {
      this.note = new ArrayList<Note>();
    }
    this.note.add(noteItem);
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public List<Note> getNote() {
    return note;
  }

  public void setNote(List<Note> note) {
    this.note = note;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TroubleTicket troubleTicket = (TroubleTicket) o;
    return Objects.equals(this.id, troubleTicket.id) &&
        Objects.equals(this.correlationId, troubleTicket.correlationId) &&
        Objects.equals(this.description, troubleTicket.description) &&
        Objects.equals(this.severity, troubleTicket.severity) &&
        Objects.equals(this.type, troubleTicket.type) &&
        Objects.equals(this.creationDate, troubleTicket.creationDate) &&
        Objects.equals(this.targetResolutionDate, troubleTicket.targetResolutionDate) &&
        Objects.equals(this.status, troubleTicket.status) &&
        Objects.equals(this.statusChangeReason, troubleTicket.statusChangeReason) &&
        Objects.equals(this.statusChangeDate, troubleTicket.statusChangeDate) &&
        Objects.equals(this.relatedParty, troubleTicket.relatedParty) &&
        Objects.equals(this.relatedObject, troubleTicket.relatedObject) &&
        Objects.equals(this.note, troubleTicket.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, correlationId, description, severity, type, creationDate, targetResolutionDate, status, statusChangeReason, statusChangeDate, relatedParty, relatedObject, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TroubleTicket {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    targetResolutionDate: ").append(toIndentedString(targetResolutionDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusChangeReason: ").append(toIndentedString(statusChangeReason)).append("\n");
    sb.append("    statusChangeDate: ").append(toIndentedString(statusChangeDate)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    relatedObject: ").append(toIndentedString(relatedObject)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

